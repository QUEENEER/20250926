#include <bits/stdc++.h>
#include <cstdlib>
using namespace std;
#define int long long
struct place{
	int x,y;
	int step;
	int hp;
};
int n,m;
int arr[10][10];
int visit[10][10]={};
int dx[4]={1,-1,0,0}, dy[4]={0,0,1,-1};
queue<place>q;
void bfs(){
	while(q.size()!=0){
		int x=q.front().x;
		int y=q.front().y;
		int step=q.front().step;
		int hp=q.front().hp;
		q.pop();
		if(arr[x][y]==3){
			cout<<step<<endl;
			exit(0);
		}
		if(hp>1){
			for(int i=0;i<4;i++){
				int xx=x+dx[i];
				int yy=y+dy[i];
				if(xx>=1&&xx<=n&&yy>=1&&yy<=m){
					if(arr[xx][yy]==1||arr[xx][yy]==3){
						if(visit[xx][yy]<hp-1){
							visit[xx][yy] = hp-1;  
							q.push({xx, yy, step+1, hp-1});
						}
					}
					if(arr[xx][yy]==4){
						if(!visit[xx][yy]){
							visit[xx][yy]=1;
							q.push(place{xx,yy,step+1,6});
						}
					}
				}
			}
		}
	}
}
signed main(){
	cin>>n>>m;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>arr[i][j];
			if(arr[i][j]==2){
				q.push(place{i,j,0,6});
				visit[i][j]=6;
			}
		}
	}
	bfs();
	cout<<-1<<endl;
}
//true
#include <bits/stdc++.h>
#include <cstdlib>
using namespace std;
#define int long long
struct place{
	int x,y;
	int step;
	int hp;
};
int n,m;
int arr[10][10];
int visit[10][10]={};
int dx[4]={1,-1,0,0}, dy[4]={0,0,1,-1};
queue<place>q;
void bfs(){
	while(q.size()!=0){
		int x=q.front().x;
		int y=q.front().y;
		int step=q.front().step;
		int hp=q.front().hp;
		q.pop();
		if(arr[x][y]==3){
			cout<<step<<endl;
			exit(0);
		}
		if(hp>1){
			for(int i=0;i<4;i++){
				int xx=x+dx[i];
				int yy=y+dy[i];
				if(xx>=1&&xx<=n&&yy>=1&&yy<=m){
					if(arr[xx][yy]==1||arr[xx][yy]==3){
						if(visit[xx][yy]<hp-1){
							visit[xx][yy] = hp-1;  
							q.push({xx, yy, step+1, hp-1});
						}
					}
					if(arr[xx][yy]==4){
						if(!visit[xx][yy]){
							visit[xx][yy]=6;
							q.push(place{xx,yy,step+1,6});
						}
					}
				}
			}
		}
	}
}
signed main(){
	cin>>n>>m;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>arr[i][j];
			if(arr[i][j]==2){
				q.push(place{i,j,0,6});
				visit[i][j]=6;
			}
		}
	}
	bfs();
	cout<<-1<<endl;
}
