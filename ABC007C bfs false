#include <bits/stdc++.h>
#include <cstdlib>
using namespace std;
#define int long long
struct place{
	int x,y;
	int step;
};
int n,m;
int sx,sy;
int gx,gy;
char arr[51][51];
int dx[4]={1,-1,0,0}, dy[4]={0,0,1,-1};
queue<place>q;
void bfs(){
	while(q.size()!=0){
		int x=q.front().x;
		int y=q.front().y;
		int step=q.front().step;
		q.pop();
		if(x==gx&&y==gy){
			cout<<step<<endl;
			exit(0);
		}
		else{
			for(int i=0;i<4;i++){
				int xx=x+dx[i];
				int yy=y+dy[i];
				if(xx>=1&&xx<=n&&yy>=1&&yy<=m){
					if(arr[xx][yy]==0){
						arr[xx][yy]=1;
						q.push(place{xx,yy,step+1});
					}
					else return;
				}
			}
		}
	}
}
signed main(){
	cin>>n>>m;
	cin>>sx>>sy;
	cin>>gx>>gy;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>arr[i][j];
			if(arr[i][j]=='#'){
				arr[i][j]=1;
			}
			else arr[i][j]=0;
		}
	}
	q.push(place{sx,sy,0});
	bfs();
	cout<<-1<<endl;
}
//true
#include <bits/stdc++.h>
#include <cstdlib>
using namespace std;
#define int long long
struct place{
	int x,y;
	int step;
};
int n,m;
int sx,sy;
int gx,gy;
char arr[51][51];
int visit[51][51];
int dx[4]={1,-1,0,0}, dy[4]={0,0,1,-1};
queue<place>q;
void bfs(){
	while(q.size()!=0){
		int x=q.front().x;
		int y=q.front().y;
		int step=q.front().step;
		q.pop();
		if(x==gx&&y==gy){
			cout<<step<<endl;
			exit(0);
		}
		else{
			for(int i=0;i<4;i++){
				int xx=x+dx[i];
				int yy=y+dy[i];
				if(xx>=1&&xx<=n&&yy>=1&&yy<=m){
					if(arr[xx][yy]==0&&visit[xx][yy]==0){
						visit[xx][yy]=1;
						q.push(place{xx,yy,step+1});
					}
					else continue;
				}
			}
		}
	}
}
signed main(){
	cin>>n>>m;
	cin>>sx>>sy;
	cin>>gx>>gy;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>arr[i][j];
			if(arr[i][j]=='#'){
				arr[i][j]=1;
			}
			else arr[i][j]=0;
		}
	}
	q.push(place{sx,sy,0});
	visit[sx][sy]=1;
	bfs();
	cout<<-1<<endl;
}
