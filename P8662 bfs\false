#include <bits/stdc++.h>
#include <cstdlib>
using namespace std;
#define int long long
int fx[4]={-1,0,1,0};
int fy[4]={0,1,0,-1};
char f[1001][1001];
int d[1001][1001];
int n;
void bfs1(int x,int y){
	queue<pair<int,int>>q;
	q.push({x,y});
	d[x][y]=0;
	while(q.size()!=0){
		int xx=q.front().first;
		int yy=q.front().second;
		q.pop();
		for(int i=0;i<4;i++){
			int dx=xx+fx[i];
			int dy=yy+fy[i];
			if(d[dx][dy]!=0&&dx>=0&&dx<=n&&dy>=0&&dy<=n){
				q.push({dx,dy});
				d[dx][dy]=0;
			}
		}
	}
}
void bfs2(int x,int y){
	queue<pair<int,int>>q;
	q.push({x,y});
	f[x][y]=0;
	while(q.size()!=0){
		int xx=q.front().first;
		int yy=q.front().second;
		q.pop();
		for(int i=0;i<4;i++){
			int dx=xx+fx[i];
			int dy=yy+fy[i];
			if(f[dx][dy]!=0&&dx>=0&&dx<=n&&dy>=0&&dy<=n){
				q.push({dx,dy});
				f[dx][dy]=0;
			}
		}
	}
}
signed main(){
	cin>>n;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			cin>>f[i][j];
			if(f[i][j]=='.'){
				f[i][j]=0;
			}
			else f[i][j]=1;
			d[i][j]=f[i][j];
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			if(f[i][j]==1&&f[i][j-1]==0||f[i-1][j]==0||f[i][j+1]==0||f[i+1][j]==0){
				f[i][j]=2;
			}
		}
	}
	int ans1=0,ans2=0;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			if(d[i][j]){
				bfs1(i,j);
				ans1++;
			}
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			if(f[i][j]==1){
				bfs2(i,j);
				ans2++;
			}
		}
	}
	cout<<ans1-ans2<<endl;
}
